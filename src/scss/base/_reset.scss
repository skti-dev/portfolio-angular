@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;700&display=swap');

/***
    The new CSS reset - version 1.9 (last updated 19.6.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" element is excluded, otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
 *:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
  cursor: pointer;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
 display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
 - fix for the content editable attribute will work properly.
 - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

/* Other styles */
html, body {
  width: 100%;
  height: 100%;
  color: var(--black);
}

* {
  font-family: 'Roboto', sans-serif;
  font-size: var(--fs-md);
  box-sizing: border-box;
}

nav svg {
  font-size: var(--fs-lg);
  width: var(--fs-lg);
  color: var(--primary);
}


section {
  color: var(--secondary);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-xl);
  height: calc(100vh - (var(--spacing-xl) * 2));

  &.dark {
    color: var(--white);
    background-color: var(--secondary);
  }
}

.highlight-text {
  color: var(--primary);
  font-weight: var(--bold-weight);
}

.underline-text {
  text-decoration: underline;
}

.section-title {
  font-weight: var(--bold-weight);
  width: 100%;
  font-size: var(--fs-lg);
  margin-bottom: var(--spacing-xxl);
}

.skill-badge svg {
  font-size: var(--fs-xl);
  color: var(--secondary);
}

.custom-title {
  transform: translateY(-14px);
  min-height: var(--fs-lg);
}

.certificate-icon {
  > svg {
    position: absolute;
    top: var(--spacing-md);
    left: var(--spacing-md);
    color: var(--secondary);
    font-size: var(--fs-md);
  }
}

.project-card {
  svg {
    font-size: var(--spacing-huge);
    color: var(--light-gray)
  }
}

.contact-item {
  svg {
    font-size: var(--fs-xl);
    color: var(--primary);
  }
}

footer {
  svg {
    font-size: var(--fs-sm);
  }
}

/* Buttons */

.flag-button {
  min-width: 300px;
  padding: var(--spacing-lg) var(--spacing-xl) var(--spacing-lg) var(--spacing-lg);
  border-top-right-radius: var(--border-radius-md);
  border-bottom-right-radius: var(--border-radius-md);
  background-color: var(--black);
  color: var(--white);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: var(--bold-weight);
  position: relative;
  font-size: var(--fs-lg);
  transform: translateX(var(--spacing-md-2));

  &::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    left: calc((var(--spacing-xxl) - 2px) * -1);
    top: 0;
    border: var(--spacing-xxl) solid;
    border-color: var(--black) transparent transparent transparent;
  }

  &::before {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    left: calc((var(--spacing-xxl) - 2px) * -1);
    bottom: 0;
    border: var(--spacing-xxl) solid;
    border-color: var(--black) transparent transparent transparent;
    transform: rotate(180deg);
  }
}

.chip-button {
  min-width: 300px;
  border: var(--border-thicker) solid var(--primary);
  color: var(--primary);
  background-color: var(--white);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-md) 0;
  font-weight: var(--bold-weight);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  min-height: var(--spacing-xxxl);
}

/* Animations */

.fade-in {
  animation-name: fade-in;
  animation-duration: 300ms;
}

@keyframes fade-in {
  from {
    opacity: 0;
  } to {
    opacity: 1;
  }
}

.typing-text {
  overflow: hidden;
  white-space: nowrap;
  border-right: var(--border-thin) solid var(--black);
  animation: typing 3s steps(40) 1000ms forwards, cursor-blink 850ms infinite;
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes cursor-blink {
  0%, 100% {
    border-right-color: transparent;
  }
  50% {
    border-right-color: var(--black);
  }
}
